{"version":3,"file":"static/js/MovieReview.7733b2bd.chunk.js","mappings":"4PAIe,SAASA,EAAT,GAAmC,IAAZC,EAAW,EAAXA,QACpC,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,uGACYC,EAAAA,EAAAA,IAAgBN,GAD5B,gBACNO,EADM,EACNA,QACRJ,EAAWI,GAFG,2CAAH,qDAIbF,GACD,GAAE,CAACL,KAGF,yBACGE,EAAQM,OAAS,GAChB,+BACE,wBACGN,EAAQO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,uBAAID,KACJ,uBAAIC,MAFGF,EADE,SASjB,qEAIP,C","sources":["pages/MovieReview.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { getMovieReviews } from '../services/MoviesApi';\nimport PropTypes from 'prop-types';\n\nexport default function MovieReview({ movieId }) {\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const getCast = async () => {\n      const { results } = await getMovieReviews(movieId);\n      setReviews(results);\n    };\n    getCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviews.length > 0 ? (\n        <>\n          <ul>\n            {reviews.map(({ id, author, content }) => (\n              <li key={id}>\n                <p>{author}</p>\n                <p>{content}</p>\n              </li>\n            ))}\n          </ul>\n        </>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </div>\n  );\n}\n\nMovieReview.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n"],"names":["MovieReview","movieId","useState","reviews","setReviews","useEffect","getCast","getMovieReviews","results","length","map","id","author","content"],"sourceRoot":""}